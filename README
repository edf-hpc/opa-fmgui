Introduciton

This README file contains instructions to build the Intel OPA Fabric Manager GUI 
jar file from source. However, you should be aware that the FM GUI jar 
distributed by Intel is signed but this build process does not sign the generated jar 
and a CA certificate is not distributed with the source. Distributing the 
generated jar will result in user machines not being able to verify the origin 
of the jar file.

Source Directory Structure

Architecture
The Fabric Manager GUI has a component-based architecture. In this section, 
the main components are briefly described, what their function is, and how 
they can be found in the source directory structure.

FE Adapter
The FE Adapter is the application interface to Fabric Management (FM) 
functions through a Fabric Executive (FE). Its function is to submit FM 
commands to a FE and parse their responses into object representations that can be
processed by the application. The package for this component is:
com.intel.stl.fecdriver

Data Manager
The Database Manager is the component in charge of storing configuration 
information as well caching Fabric Management data to a local database. 
The packages applicable to this component are:

com.intel.stl.datamanager - interface to application
com.intel.stl.dbengine - interface to SQL engine

User Interface APIs
The User Interface APIs component provides all services available to a 
UI component to display Fabric Management data. These services are grouped 
by function but in general they are group under the following package:

com.intel.stl.api

User Interface
The User Interface component is the graphical implementation of the 
Fabric Manager GUI. It includes all the widgets and logic to display 
Fabric Management information. The main package for this component is:

com.intel.stl.ui

Build Requirements
Gradle
The Fabric Manager GUI build requires Gradle 2.9.  Gradle is an open 
source tool used for dependency management and build.  It can be
downloaded from http://gradle.org 

Java Development Kit
The Fabric Manager GUI build requires a Java Development Kit (JDK) 7. 
The JDK 7 binaries can be downloaded from Oracle's Java SE Downloads site.
http://www.oracle.com/technetwork/java/javase/downloads/index.html
You should set the environment variable JAVA_HOME to the location of the JDK
installation; this is the pathname of the folder that contains folders bin,
lib and include.

Building the Jar

After the build requirements have been met, the steps to generate 
the FM GUI jar are straightforward:

Open a terminal/command window at the location where you unzipped 
the FM GUI distribution source. We will refer to this location as FMGUI_SRC
Start the build process by entering the following command:

	gradle copyDeps build

Wait for the successful completion of the build process:

    BUILD SUCCESSFUL
    Total time: n seconds

The build will produce the fmgui.jar file which will appear in {FMGUI_SRC} 
directory.  The build will also download the necessary compile and runtime
dependecies and copy them into the {FMGUI_SRC}/lib directory to make them
available for the FM GUI application during runtime.

Type the following command to start the application:

    ./fmgui.sh

Creating RPMs
The opa-fmgui.spec file was created to act as part of Intel's internal build process
but can be used manually create RPMs through the following steps.

Change directory to the level above the opa-fmgui directory

       cd ..

Change the name of the directory from opa-fmgui to IntelOPA-FMGUI-10_0_0_0_2

       mv opa-fmgui IntelOPA-FMGUI-10_0_0_0_2

Create a tar file of the opa-fmgui sources in the rpmbuild/SOURCES directory

       tar -cvf $HOME/rpmbuild/SOURCES/IntelOPA-FMGUI-10_0_0_0_2.source.tar IntelOPA-FMGUI-10_0_0_0_2

Change directory back into the opa-fmgui directory now called IntelOPA-FMGUI-10_0_0_0_2

       cd IntelOPA-FMGUI-10_0_0_0_2

Create RPM build environment:
cd {$HOME}
mkdir -p ~/rpmbuild/{RPMS,SRPMS,BUILD,SOURCES,SPECS,tmp}
cat <<EOF >~/.rpmmacros
%_topdir   %(echo $HOME)/rpmbuild
%_tmppath  %{_topdir}/tmp
EOF

Copy tar file to the SOURCES directory:
cp {path-to-tar}/IntelOPA-FMGUI-10_0_0_0_2.source.tar ~/rpmbuild/SOURCES/

Copy the spec file from the opa-fmgui directory into SPECS directory:
cp {opa-fmgui}/fmgui.spec ~/rpmbuild/SPECS

Build the rpm:
rpmbuild -ba ~/rpmbuild/SPECS/fmgui.spec

Upon completion youâ€™ll find the rpm in ~/rpmbuild/RPMS directory.

Put the directory back to its original name

       cd ..; mv IntelOPA-FMGUI-10_0_0_0_2 opa-fmgui; cd opa-fmgui

